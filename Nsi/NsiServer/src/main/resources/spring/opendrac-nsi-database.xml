<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
  xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
  xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:context="http://www.springframework.org/schema/context"
  xmlns:util="http://www.springframework.org/schema/util"
  xmlns:security="http://www.springframework.org/schema/security"
  xmlns:task="http://www.springframework.org/schema/task"
  xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
       http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
       http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.1.xsd
       http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-2.0.4.xsd
       http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.1.xsd"
  default-lazy-init="true">

  <!-- -->
  <!-- Enable transaction annotations -->
  <!-- -->
  <tx:annotation-driven transaction-manager="nsiTransactionManager" />

  <!-- -->
  <!-- Transaction Manager -->
  <!-- -->
  <bean id="nsiTransactionManager"
    class="org.springframework.orm.hibernate4.HibernateTransactionManager">
    <property name="sessionFactory" ref="nsiSessionFactory" />
  </bean>

  <!-- -->
  <!-- Session Factory -->
  <!-- -->
  <bean id="nsiSessionFactory"
    class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
    <property name="dataSource">
      <ref bean="nsiDataSource" />
    </property>
    <property name="hibernateProperties">
      <props>
        <prop key="hibernate.show_sql">true</prop>
        <prop key="hibernate.format_sql">true</prop>
        <prop key="hibernate.hbm2ddl.auto">update</prop>
        <prop key="hibernate.default_batch_fetch_size">4</prop>
        <prop key="hibernate.generate_statistics">true</prop>
        <prop key="hibernate.cglib.use_reflection_optimizer">true</prop>
      </props>
    </property>
    <property name="annotatedClasses">
      <list>
        <value>org.opendrac.nsi.domain.StateMachine</value>
        <value>org.opendrac.nsi.pathfinding.PathSegment</value>
        <value>org.opendrac.nsi.security.SessionSecurity</value>
        <value>org.opendrac.nsi.security.NsaSecurityContext</value>
      </list>
    </property>
  </bean>

  <!-- -->
  <!-- Everything under this comment will be removed once the mysql / split -->
  <!-- server issue has been solved -->
  <!-- -->
  <bean
    class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
    <property name="ignoreResourceNotFound" value="true" />
    <property name="systemPropertiesModeName" value="SYSTEM_PROPERTIES_MODE_OVERRIDE" />
    <property name="locations">
      <list>
        <value>classpath:env/opendrac-nsi-database-test.xml</value>
        <value>classpath:env/opendrac-database-dev.xml</value>
      </list>
    </property>
  </bean>

  <bean id="nsiDataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
    destroy-method="close">
    <property name="user" value="${jdbc.user}" />
    <property name="password" value="${jdbc.password}" />
    <property name="driverClass" value="${jdbc.driverClass}" />
    <property name="jdbcUrl" value="${jdbc.jdbcUrl}" />
    <property name="initialPoolSize" value="${jdbc.initialPoolSize}" />
    <property name="maxPoolSize" value="${jdbc.maxPoolSize}" />
    <property name="minPoolSize" value="${jdbc.minPoolSize}" />
    <property name="acquireIncrement" value="${jdbc.acquireIncrement}" />
    <property name="acquireRetryAttempts" value="${jdbc.acquireRetryAttempts}" />
    <property name="idleConnectionTestPeriod" value="${jdbc.idleConnectionTestPeriod}" />
    <property name="automaticTestTable" value="${jdbc.test.table}" />
  </bean>

</beans>

